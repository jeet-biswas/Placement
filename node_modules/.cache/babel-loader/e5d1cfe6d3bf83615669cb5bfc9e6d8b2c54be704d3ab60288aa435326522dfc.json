{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom/client\";// Import from 'react-dom/client' in React 18\nimport App from\"./App\";import\"./index.css\";// Register the service worker (Only if you want to use it)\nimport{jsx as _jsx}from\"react/jsx-runtime\";if('serviceWorker'in navigator){window.addEventListener('load',()=>{// Ensure the path to the service worker file is correct\nnavigator.serviceWorker.register('/service-worker.js').then(registration=>{console.log('Service Worker registered with scope:',registration.scope);}).catch(error=>{console.log('Service Worker registration failed:',error);});});}// Use React 18's createRoot for rendering\nconst root=ReactDOM.createRoot(document.getElementById('root'));// Create root container\nroot.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));","map":{"version":3,"names":["React","ReactDOM","App","jsx","_jsx","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","catch","error","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/Users/jeetbiswas/Desktop/untitled folder 6/career-website/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\"; // Import from 'react-dom/client' in React 18\nimport App from \"./App\";\nimport \"./index.css\";\n\n// Register the service worker (Only if you want to use it)\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    // Ensure the path to the service worker file is correct\n    navigator.serviceWorker.register('/service-worker.js')\n      .then((registration) => {\n        console.log('Service Worker registered with scope:', registration.scope);\n      })\n      .catch((error) => {\n        console.log('Service Worker registration failed:', error);\n      });\n  });\n}\n\n// Use React 18's createRoot for rendering\nconst root = ReactDOM.createRoot(document.getElementById('root')); // Create root container\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CAAE;AACzC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,aAAa,CAEpB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,CAAE,IAAM,CACpC;AACAF,SAAS,CAACG,aAAa,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CACnDC,IAAI,CAAEC,YAAY,EAAK,CACtBC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAEF,YAAY,CAACG,KAAK,CAAC,CAC1E,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEG,KAAK,CAAC,CAC3D,CAAC,CAAC,CACN,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAC,IAAI,CAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAE;AACnEH,IAAI,CAACI,MAAM,cACTjB,IAAA,CAACJ,KAAK,CAACsB,UAAU,EAAAC,QAAA,cACfnB,IAAA,CAACF,GAAG,GAAE,CAAC,CACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}